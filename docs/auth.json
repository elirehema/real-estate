{
    "openapi": "3.0.1",
    "info": {
      "title": "oPus Api for Authentication",
      "description": "oPus Api for Authenticating new New Entities",
      "license": {
        "name": "MIT",
        "url": "https://opensource.org/licenses/MIT"
      },
      "version": "1.0.0"
    },
    "servers": [
      {
        "url": "https://infosk.herokuapp.com/api/v1"
      },
      {
        "url": "http://localhost:3338/api/v1"
      }
    ],
    "tags": [
      {
        "name": "Authentication",
        "description": "API for Authentication in the system"
      }
    ],
    "paths": {
      "/auth/login": {
        "post": {
          "tags": [
            "Authentication"
          ],
          "summary": "Login into a system to get accessToken for futher requests",
          "description": "Create new Authenticate entiry in system",
          "requestBody": {
            "description": "Entity that we want to create",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Authenticated"
                }
              }
            },
            "required": false
          },
          "responses": {
            "200": {
              "description": "New Entity is created",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Authentications"
                  }
                }
              }
            }
          },
          "x-codegen-request-body-name": "auth"
        }
      },
      "/auth": {
        "get": {
          "tags": [
            "Authentication"
          ],
          "summary": "Get all Authenticated entities in system",
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Authentications"
                  }
                }
              }
            }
          }
        },
        "post": {
          "tags": [
            "Authentication"
          ],
          "parameters": [
            {
              "name": "authId",
              "in": "path",
              "description": "ID an Entity that we want to find",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "Authorization",
              "in": "header",
              "description": "Authentication token e.g.  Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "summary": "Create new Authenticate entity",
          "description": "Create new Authenticate entiry in system",
          "requestBody": {
            "description": "Entity that we want to create",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Authentication"
                }
              }
            },
            "required": false
          },
          "responses": {
            "200": {
              "description": "New Entity is created",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Authentication"
                  }
                }
              }
            }
          },
          "x-codegen-request-body-name": "auth"
        }
      },
      "/auth/{authId}": {
        "get": {
          "tags": [
            "Authentication"
          ],
          "summary": "Get Entity with given ID",
          "parameters": [
            {
              "name": "authId",
              "in": "path",
              "description": "ID of Entity that we want to find",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "Authorization",
              "in": "header",
              "description": "Authentication token e.g.  Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Entity is found",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Authentication"
                  }
                }
              }
            }
          }
        },
        "put": {
          "tags": [
            "Authentication"
          ],
          "summary": "Update the whole Entity with give ID",
          "parameters": [
            {
              "name": "authId",
              "in": "path",
              "description": "ID an Entity that we want to find",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "Authorization",
              "in": "header",
              "description": "Authentication token e.g.  Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "description": "Entity with new values of properties",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Authentication"
                }
              }
            },
            "required": false
          },
          "responses": {
            "200": {
              "description": "Product is updated",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Authentication"
                  }
                }
              }
            }
          },
          "x-codegen-request-body-name": "auth"
        },
        "patch": {
          "tags": [
            "Authentication"
          ],
          "summary": "Update some part of Entity with give ID",
          "parameters": [
            {
              "name": "authId",
              "in": "path",
              "description": "ID an Entity that we want to find",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "Authorization",
              "in": "header",
              "description": "Authentication token e.g.  Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "description": "Entity with new values of properties",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Authentication"
                }
              }
            },
            "required": false
          },
          "responses": {
            "200": {
              "description": "Product is updated",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Authentication"
                  }
                }
              }
            }
          },
          "x-codegen-request-body-name": "auth"
        },
        "delete": {
          "tags": [
            "Authentication"
          ],
          "summary": "Delete Entity with given ID",
          "parameters": [
            {
              "name": "authId",
              "in": "path",
              "description": "ID of entity that we want to find",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Entity is deleted"
            }
          }
        }
      },
      "/auth/logout": {
        "get": {
          "tags": [
            "Authentication"
          ],
          "summary": "Logout entity with a give ID",
          "parameters": [
            {
              "name": "authId",
              "in": "path",
              "description": "Try to log entity out of system",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Logout the Entity"
            }
          }
        }
      }
    },
    "components": {
      "schemas": {
        "Authentication": {
          "required": [
            "email",
            "password"
          ],
          "type": "object",
          "properties": {
            "_id": {
              "type": "string"
            },
            "email": {
              "type": "string"
            },
            "password": {
              "type": "string"
            }
          }
        },
        "Authenticated": {
          "required": [
            "email",
            "password"
          ],
          "type": "object",
          "properties": {
            "_id": {
              "type": "string"
            },
            "email": {
              "type": "string",
              "enum": [
                "user",
                "poweruser",
                "admin"
              ],
              "default": "elirehema@email.com"
            },
            "password": {
              "type": "string",
              "enum": [
                "user",
                "poweruser",
                "admin"
              ],
              "default": "password123"
            }
          }
        },
        "Authentications": {
          "type": "array",
          "items": {
            "$ref": "#/components/schemas/Authentication"
          }
        }
      }
    }
  }