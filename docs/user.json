{
  "openapi": "3.0.1",
  "info": {
    "title": "oPus Api for Users",
    "description": "oPus Api for creating, Updating, Editing and Deletion of system users",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://infosk.herokuapp.com/api/v1"
    },
    {
      "url": "http://localhost:8080/api/v1"
    }
  ],
  "tags": [
    {
      "name": "Users",
      "description": "API for users in the system"
    }
  ],
  "paths": {
    "/users": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get all users in system",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Users"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Users"
        ],
        "description": "Create new user in system",
        "requestBody": {
          "description": "User that we want to create",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "New user is created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "user"
      }
    },
    "/users/{userId}": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get user with given ID",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "ID of user that we want to find",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User is found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Users"
        ],
        "summary": "Update user with give ID",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "ID of user that we want to find",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "User with new values of properties",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "User is updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "user"
      },
      "delete": {
        "tags": [
          "Users"
        ],
        "summary": "Delete user with given ID",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "ID of user that we want to find",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User is deleted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "User": {
        "required": [
          "email",
          "fname",
          "fullname",
          "image",
          "lname",
          "phone",
          "username"
        ],
        "type": "object",
        "properties": {
          "username": {
            "type": "string"
          },
          "fname": {
            "type": "string"
          },
          "lname": {
            "type": "string"
          },
          "fullname": {
            "type": "string"
          },
          "image": {
            "type": "string"
          },
          "phone": {
            "type": "number"
          },
          "email": {
            "type": "string"
          },
          "create_date": {
            "type": "object",
            "properties": {}
          },
          "address": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "postal": {
            "type": "string"
          }
        }
      },
      "Users": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/User"
        }
      }
    }
  }
}